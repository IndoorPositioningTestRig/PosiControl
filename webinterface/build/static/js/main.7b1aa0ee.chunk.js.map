{"version":3,"sources":["components/Dropdown/Dropdown.js","constants/Message.js","constants/Api.js","screen/Message.js","components/DataPlotter/DataPlotter.js","screen/Pid.js","screen/Setpoint.js","screen/Home.js","components/TopBar/TopBar.js","App.js","serviceWorker.js","index.js"],"names":["Dropdown","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","open","handleSelected","bind","assertThisInitialized","setState","selected","onSelected","value","react_default","a","createElement","className","onClick","_this2","options","key","map","option","renderOpen","renderClosed","React","Component","enhanceWithClickOutside","TYPE","request","command","response","getBaseUrl","concat","window","location","hostname","Message","message","target","messageType","data","handleConfirmClick","field","fetch","method","body","mode","alert","components_Dropdown_Dropdown","handleValue","rows","onChange","e","DataPlotter","width","innerWidth","handleResize","addEventListener","removeEventListener","graphData","datapoints","setpoints","outputs","encoders","forEach","datapoint","push","x","y","fromDatapoints","console","log","chartWidth","style","backgroundColor","lib","axes","margin","top","right","bottom","left","grid","lineColors","verticalGrid","height","values","Pid","p","i","d","errors","handleChange","defineProperty","PID","hasError","numVal","Number","parseFloat","isNaN","type","_default","setPoint","setPointWarning","useEncoder","handleSetPointChange","handleEncoderChange","encoderParam","parseInt","res","text","jsondata","JSON","parse","parsed","json","_this$state2","DataPlotter_DataPlotter_DataPlotter","Pid_Pid","Home","responses","homing","handleHomeClicked","slice","responseText","length","index","disabled","renderResponses","TopBar","menuOpen","navTarget","handleClose","handleButtonClick","handleNavClicked","nav","history","MenuClickOutside","onOptionClick","onClickOutside","withRouter","Menu","App","components_TopBar_TopBar","Switch","Route","path","component","Setpoint","Boolean","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7b1aa0ee.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Dropdown.scss\";\nimport enhanceWithClickOutside from \"react-click-outside\"\n\nclass Dropdown extends React.Component{\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false,\n    };\n\n    this.handleSelected = this.handleSelected.bind(this);\n    this.open = this.open.bind(this);\n  }\n\n  open() {\n    this.setState({open: true});\n  }\n\n  handleSelected(selected) {\n    this.props.onSelected(selected);\n    this.setState({open: false});\n  }\n\n  handleClickOutside() {\n    this.setState({open: false});\n  }\n\n  renderClosed() {\n    const {value} = this.props;\n\n    return (\n      <div className={\"wrapper closed\"} onClick={this.open}>\n        {value=== null ? \"none\" : value}\n      </div>\n    );\n  }\n\n  renderOpen() {\n    const {options} = this.props;\n\n    return (\n      <div className={\"wrapper open\"}>\n        <div\n          className={\"option\"}\n          key={\"none\"}\n          onClick={() => this.handleSelected(null)}\n        >\n          none\n        </div>\n        {options.map((option) =>\n          <div\n            className={\"option\"}\n            key={option}\n            onClick={() => this.handleSelected(option)}\n          >\n            {option}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className={\"dropdown\"}>\n        {this.state.open ?\n          this.renderOpen() :\n          this.renderClosed()\n        }\n      </div>\n    );\n  }\n}\n\nexport default enhanceWithClickOutside(Dropdown);\n\nDropdown.propTypes = {\n  options: PropTypes.array.isRequired,\n  onSelected: PropTypes.func.isRequired,\n  value: PropTypes.any,\n};\n","export const TYPE = {\n  \"request\": 1,\n  \"command\": 2,\n  \"response\": 3,\n};\n","// export const BaseUrl = \"http://192.168.4.1:8000\";\n// export const BaseUrl = \"http://192.168.43.190:8000\";\n// export const BaseUrl = \"http://10.42.0.81:8000\";\n\n\nexport function getBaseUrl() {\n  return `http://${window.location.hostname}:8000`;\n}\n","import React from \"react\";\nimport Dropdown from \"../components/Dropdown/Dropdown\";\nimport \"./Message.scss\";\nimport {TYPE} from \"../constants/Message\";\nimport {getBaseUrl} from \"../constants/Api\";\n\nexport default class Message extends React.Component{\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: {\n        target: null,\n        messageType: null,\n        data: \"\",\n      }\n    };\n\n    this.handleConfirmClick = this.handleConfirmClick.bind(this);\n  }\n\n  handleValue(field, value) {\n    const {message} = this.state;\n    message[field] = value;\n    this.setState({message});\n  }\n\n  handleConfirmClick() {\n    const {message} = this.state;\n\n    if (message.target === null) {\n      alert(\"Target missing!\");\n      return;\n    }\n    if (message.messageType === null) {\n      alert(\"Type missing\");\n      return;\n    }\n    const messageType = TYPE[message.messageType];\n    fetch(`${getBaseUrl()}/msg/${message.target}/${messageType}/`, {\n      method: \"post\",\n      body: message.data,\n      mode: \"no-cors\",\n    });\n  }\n\n  render() {\n    const {message} = this.state;\n\n    return (\n      <div className={\"screen-message\"}>\n        <div className={\"header\"}>Send a message</div>\n        <div className={\"body\"}>\n          {/* Target */}\n          <div className={\"field\"}>\n            <div className={\"name\"}>target:</div>\n            <div className={\"value\"}>\n              <Dropdown\n                onSelected={(value) => this.handleValue(\"target\", value)}\n                value={message.target}\n                options={[0, 1, 2, 3, 4, 5, 6, 7, 8]}\n              />\n            </div>\n          </div>\n          {/* Message type */}\n          <div className={\"field\"}>\n            <div className={\"name\"}>type:</div>\n            <div className={\"value\"}>\n              <Dropdown\n                onSelected={(value) => this.handleValue(\"messageType\", value)}\n                value={message.messageType}\n                options={[\"command\", \"request\", \"response\"]}\n              />\n            </div>\n          </div>\n          {/* Content */}\n          <div className={\"field\"}>\n            <div className={\"name\"}>data:</div>\n            <div className={\"value\"}>\n              <div className={\"text-wrapper\"}>\n                <textarea\n                  rows={\"4\"}\n                  onChange={(e) => this.handleValue(\"data\", e.target.value)}\n                  value={message.data}\n                />\n              </div>\n            </div>\n          </div>\n          {/* Confirm */}\n          <div\n            onClick={this.handleConfirmClick}\n            className={\"confirm-button\"}\n          >\n          Send\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport {LineChart} from \"react-easy-chart\";\nimport \"./DataPlotter.scss\";\n\nexport function dummyData(len=12) {\n  const data = [];\n  for (let i = 0; i < len; i++) {\n    data.push({\n      setpoint: 0,\n      output: (Math.random() * (255 * 2)) - 255,\n      encoder: (Math.random() * 2000) - 1000,\n      time: 100 * i,\n    });\n  }\n  return data;\n}\n\nfunction fromDatapoints(datapoints) {\n  const setpoints = [];\n  const outputs = [];\n  const encoders = [];\n\n  datapoints.forEach((datapoint) => {\n    setpoints.push({x: datapoint[\"time\"] , y:datapoint[\"setpoint\"]/10});\n    outputs.push({x: datapoint[\"time\"], y: datapoint[\"output\"]/10});\n    encoders.push({x: datapoint[\"time\"], y: datapoint[\"encoder\"]/10});\n  });\n\n  return [setpoints, outputs, encoders];\n}\n\nexport default class DataPlotter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: window.innerWidth,\n    };\n\n    this.handleResize = this.handleResize.bind(this);\n  }\n\n  handleResize() {\n    this.setState({\n      width: window.innerWidth,\n    });\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.handleResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  }\n\n  render() {\n    const {data} = this.props;\n    const graphData = fromDatapoints(data || []);\n    console.log(\"graphdata\", graphData);\n    let chartWidth = 600;\n    if (this.state.width < 900) {\n      chartWidth = this.state.width - 20;\n    }\n\n    return (\n      <div className={\"data-plotter\"}>\n        <div>\n          <div className={\"legend-item\"}>\n            <div style={{backgroundColor: \"red\"}} className={\"legend-icon\"}/>\n            setpoint\n          </div>\n          <div className={\"legend-item\"}>\n            <div style={{backgroundColor: \"blue\"}} className={\"legend-icon\"}/>\n            output\n          </div>\n          <div className={\"legend-item\"}>\n            <div style={{backgroundColor: \"green\"}} className={\"legend-icon\"}/>\n              encoder\n          </div>\n        </div>\n        <LineChart\n          axes={true}\n          margin={{top: 10, right: 10, bottom: 50, left: 50}}\n          // margin={{top: 10, right: 10, bottom: 10, left: 10}}\n          grid\n          lineColors={[\"red\", \"blue\", \"green\"]}\n          verticalGrid\n          width={chartWidth}\n          height={400}\n\n          // axisLabels={{x: \"time in millis\", y: \"values\"}}\n          data={graphData}\n        />\n      </div>\n    );\n  }\n}","import React from \"react\";\nimport \"./Pid.scss\";\nimport {getBaseUrl} from \"../constants/Api\";\nimport PropTypes from \"prop-types\";\n\nconst values = [\"p\", \"i\", \"d\"];\n\nexport default class Pid extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      p: 0,\n      i: 0,\n      d: 0,\n      errors: {}\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleConfirmClick = this.handleConfirmClick.bind(this);\n  }\n\n  handleChange(field, value) {\n    this.setState({\n      [field]: value,\n    });\n  }\n\n  handleConfirmClick() {\n    if (this.props.target === null) {\n      alert(\"No target selected!\");\n      return;\n    }\n\n    let PID = this.state;\n    const {errors} = this.state;\n    let hasError = false;\n\n    values.forEach((value) => {\n      const numVal = Number.parseFloat(PID[value]);\n      errors[value] = Number.isNaN(numVal);\n      hasError = hasError || errors[value];\n      PID[value] = numVal;\n    });\n\n    if (hasError) {\n      this.setState({errors});\n      alert(\"Only floating point values are allowed for PID\");\n      return;\n    }\n\n    return fetch(`${getBaseUrl()}/set_pid/${this.props.target}/${PID[\"p\"]}/${PID[\"i\"]}/${PID[\"d\"]}/`, {\n      method: \"post\",\n    });\n  }\n\n  render() {\n    return (\n      <div className={\"pid-screen\"}>\n        <b>PID</b>\n        <div className={\"pid-input\"}>\n          <div className={\"field\"}>\n            <div className={\"name\"}>P</div>\n            <input\n              type={\"number\"}\n              value={this.state.p}\n              onChange={(e) => this.handleChange(\"p\", e.target.value)}\n            />\n          </div>\n          <div className={\"field\"}>\n            <div className={\"name\"}>I</div>\n            <input\n              type={\"number\"}\n              value={this.state.i}\n              onChange={(e) => this.handleChange(\"i\", e.target.value)}\n\n            />\n          </div>\n          <div className={\"field\"}>\n            <div className={\"name\"}>D</div>\n            <input\n              type={\"number\"}\n              value={this.state.d}\n              onChange={(e) => this.handleChange(\"d\", e.target.value)}\n            />\n          </div>\n        </div>\n        <div\n          onClick={this.handleConfirmClick}\n          className={\"confirm-button\"}\n        >\n          Apply\n        </div>\n      </div>\n    );\n  }\n}\n\nPid.propTypes = {\n  target: PropTypes.number,\n};\n","import React from \"react\";\nimport \"./Setpoint.scss\";\nimport DataPlotter from \"../components/DataPlotter/DataPlotter\";\nimport Dropdown from \"../components/Dropdown/Dropdown\";\nimport {getBaseUrl} from \"../constants/Api\";\nimport Pid from \"./Pid\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      target: null,\n      setPoint: \"0\",\n      setPointWarning: false,\n      useEncoder: false,\n    };\n\n    this.handleSetPointChange = this.handleSetPointChange.bind(this);\n    this.handleConfirmClick = this.handleConfirmClick.bind(this);\n    this.handleEncoderChange = this.handleEncoderChange.bind(this);\n  }\n\n  handleValue(field, value) {\n    this.setState({\n      [field]: value,\n    });\n  }\n\n  async handleConfirmClick() {\n    const {target, setPoint, setPointWarning, useEncoder} = this.state;\n    if (target === null || setPointWarning) {\n      alert(\"Target and/or setPoint is invalid!\");\n      return;\n    }\n\n\n    let encoderParam = useEncoder? 1 : 0;\n\n\n    const res = await fetch(\n      `${getBaseUrl()}/setPoint/${target}/${Number.parseInt(setPoint)}/${encoderParam}/`, {\n        method: \"get\"\n      });\n    const jsondata = await res.text();\n    console.log(\"gotjson\", jsondata);\n    const data = JSON.parse(jsondata);\n    console.log(\"gotdata\", data);\n    this.setState({data});\n  }\n\n  handleSetPointChange(e) {\n    const setPoint = e.target.value;\n    const parsed = Number.parseInt(setPoint);\n    let setPointWarning = isNaN(parsed);\n    this.setState({setPoint, setPointWarning});\n  }\n\n  async fetchPid() {\n    const res = await fetch(`${getBaseUrl()}/pid/${this.state.target}`, {\n      method: \"get\",\n    });\n    const json = await res.json();\n    return json;\n  }\n\n  handleEncoderChange(e) {\n    this.setState({\n      useEncoder: !this.state.useEncoder,\n    });\n  }\n\n  render() {\n    const {data, target, setPoint, setPointWarning} = this.state;\n\n    return (\n      <div className={\"setpoint-screen\"}>\n        <div className={\"left\"}>\n          <div className={\"fields\"}>\n            <div className={\"field\"}>\n              <div className={\"name\"}>Encoder:</div>\n              <div className={\"value\"}>\n                <input\n                  type={\"checkbox\"}\n                  onChange={this.handleEncoderChange}\n                  value={this.state.useEncoder}\n                />\n              </div>\n            </div>\n            {/* Target */}\n            <div className={\"field\"}>\n              <div className={\"name\"}>target:</div>\n              <div className={\"value\"}>\n                <Dropdown\n                  onSelected={(value) => this.handleValue(\"target\", value)}\n                  value={target}\n                  options={[0, 1, 2, 3, 4, 5, 6, 7, 8]}\n                />\n              </div>\n            </div>\n            {/* SetPoint */}\n            <div className={\"field\"}>\n              <div className={\"name\"}>setPoint:</div>\n              <div className={\"value\"}>\n                <input\n                  className={`setpoint-input ${setPointWarning && \"warning\"}`}\n                  type={\"number\"}\n                  value={setPoint}\n                  onChange={this.handleSetPointChange}\n                />\n              </div>\n            </div>\n          </div>\n          {/* Confirm */}\n          <div\n            onClick={this.handleConfirmClick}\n            className={\"confirm-button\"}\n          >\n          Send\n          </div>\n        </div>\n        <div className={\"right\"}>\n          <DataPlotter data={data}/>\n        </div>\n        <div>\n          <Pid\n            target={this.state.target}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./Home.scss\";\nimport {getBaseUrl} from \"../constants/Api\";\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      responses: [],\n      homing: false,\n    };\n\n    this.handleHomeClicked = this.handleHomeClicked.bind(this);\n  }\n\n  async handleHomeClicked() {\n    const {homing} = this.state;\n    const responses = this.state.responses.slice();\n    if (homing) return;\n\n    this.setState({\n      homing: true,\n    });\n\n    const response = await fetch(`${getBaseUrl()}/home/`, {\n      method: \"get\",\n    });\n\n    const responseText = await response.text();\n    responses.push(responseText);\n    this.setState({\n      homing: false,\n      responses,\n    });\n  }\n\n  renderResponses() {\n    const {responses} = this.state;\n\n    if (responses.length === 0) {\n      return null;\n    }\n\n    return (\n      <div>\n        {responses.map((response, index) =>\n          <div className={\"result-row\"}>\n            <div className={\"index\"}>{index}:</div>\n            <div>{response}</div>\n          </div>)\n        }\n      </div>\n    );\n  }\n\n  render() {\n    const {homing} = this.state;\n\n    return (\n      <div className={\"home\"}>\n        <button\n          disabled={homing}\n          onClick={this.handleHomeClicked}\n        >\n          HOME!\n        </button>\n        {homing &&\n          <div>\n            Homing in progress, please wait...\n          </div>\n        }\n        {this.renderResponses()}\n      </div>\n    );\n  }\n}","import React from \"react\";\nimport \"./TopBar.scss\";\nimport {withRouter} from \"react-router-dom\";\nimport enhanceWithClickOutside from \"react-click-outside\";\n\nclass TopBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      menuOpen: false,\n      navTarget: null,\n    };\n\n    this.handleClose = this.handleClose.bind(this);\n    this.handleButtonClick = this.handleButtonClick.bind(this);\n    this.handleNavClicked = this.handleNavClicked.bind(this);\n  }\n\n  handleButtonClick() {\n    this.setState({menuOpen: !this.state.menuOpen});\n  }\n\n  handleClose() {\n    this.setState({menuOpen: false});\n  }\n\n  handleNavClicked(nav) {\n    this.props.history.push(nav);\n    this.setState({menuOpen: false});\n  }\n\n  render() {\n    return (\n      <div className={\"top-bar\"}>\n        <div onClick={this.handleButtonClick} className={\"menu-button\"}>\n          <div className={\"icon\"}>\n            <div className={\"line\"}/>\n            <div className={\"line\"}/>\n            <div className={\"line\"}/>\n          </div>\n        </div>\n        {this.state.menuOpen &&\n          <MenuClickOutside\n            onOptionClick={this.handleNavClicked}\n            onClickOutside={this.handleClose}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default withRouter(TopBar);\n\nclass Menu extends React.Component {\n  handleClickOutside() {\n    this.props.onClickOutside();\n  }\n\n  render() {\n    return (\n      <div className={\"menu\"}>\n        <div\n          className={\"option\"}\n          onClick={() => this.props.onOptionClick(\"/\")}\n        >\n          Setpoint\n        </div>\n        <div\n          className={\"option\"}\n          onClick={() => this.props.onOptionClick(\"message\")}\n        >\n          Message\n        </div>\n        <div\n          className={\"option\"}\n          onClick={() => this.props.onOptionClick(\"home\")}\n        >\n          Home\n        </div>\n      </div>\n    );\n  }\n}\n\nconst MenuClickOutside = enhanceWithClickOutside(Menu);\n","import React from \"react\";\nimport \"./App.scss\";\nimport Message from \"./screen/Message\";\nimport Setpoint from \"./screen/Setpoint\";\nimport Home from \"./screen/Home\";\nimport {Switch, Route} from \"react-router-dom\";\n\nimport TopBar from \"./components/TopBar/TopBar\";\n\nclass App extends React.Component {\n  render() {\n\n    return (\n      <div className=\"App\">\n        <TopBar />\n        <Switch>\n          <Route path={\"/message\"} component={Message}/>\n          <Route path={\"/home\"} component={Home}/>\n          <Route path={\"/\"} component={Setpoint}/>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render((\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n),document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}